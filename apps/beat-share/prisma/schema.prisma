generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id              String   @id @default(cuid())
  name            String  
  email           String   @unique
  emailVerified   Boolean
  uploads         Upload[]
  account         Account[]
  image           String?
  sessions        Session[]
  createdAt       DateTime @default(now())
  updatedAt       DateTime @default(now())
}

model Session {
  id          String   @id @default(cuid())
  expiresAt   DateTime 
  token       String   
  userId      String
  ipAddress   String?
  userAgent   String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())
  user        User     @relation(fields: [userId], references: [id])
}

model Account {
  id                      String   @id @default(cuid())
  userId                  String   
  user                    User     @relation(fields: [userId], references: [id])

  accountId               String
  providerId              String

  accessToken             String?  
  refreshToken            String?  
  accessTokenExpiresAt    DateTime?
  refreshTokenExpiresAt   DateTime?
  scope                   String?
  idToken                 String?
  password                String?

  createdAt               DateTime @default(now())
  updatedAt               DateTime @updatedAt

  @@unique([providerId, accountId])
}

model Upload {
  id          String   @id @default(cuid())
  userId      String  
  user        User     @relation(fields: [userId], references: [id])
  title       String
  description String?
  tags        String[]
  url         String
  duration    Float
  waveform    String?
  likes       Int      @default(0)
  createdAt   DateTime @default(now())
}

model Verification {
  id         String   @id @default(cuid())
  identifier String
  value      String
  expiresAt  DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}
